from pyrogram import Client, filters
import random
from typing import Union
from config import Config
from logo import generate_logo
from logo import get_wallpapers, get_unsplash
from pyrogram.types import *
import result
from pyrogram.types import InputMediaPhoto, User, Message, InlineQueryResultPhoto, InlineQueryResult, InputTextMessageContent, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, InlineQuery, Chat
from pyrogram.errors import UserNotParticipant, ChatAdminRequired, UsernameNotOccupied, FloodWait
from pyrogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from pyrogram import filters
from telegram import Message, MessageId
from telegram.ext import CallbackContext, Filters, MessageHandler
from telegram.error import ChatMigrated
from telegram.update import Update
from pyrogram.types import Message
from pyrogram import Client
from requests import get
import os
import requests
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton


caption = """
✍️ Logo Generated Successfully✅

◇───────────────◇

🚀 **Generated By** : **[LOGO GENERATE BOT 🔅](http://t.me/The_logo_generate_bot)**

🌺 **Requestor** :||** {} **||

🌷 **Powered By **  : **[Network Tech 🇱🇰](https://t.me/NetworksTech)**

◇───────────────◇️  """
caption2 = """
✍️ Write picture Generated Successfully✅

◇───────────────◇

🚀 **Generated By** : **[LOGO GENERATE BOT 🔅](http://t.me/The_logo_generate_bot)**

🌺 **Requestor** :||** {} **||

🌷 **Powered By **  : **[Network Tech 🇱🇰](https://t.me/NetworksTech)**

◇───────────────◇️  
    """

caption3 = """
✍️ Wallpaper Generated Successfully✅

◇───────────────◇

🚀 **Generated By** : **[LOGO GENERATE BOT 🔅](http://t.me/The_logo_generate_bot)**

🌺 **Requestor** :||** {} **||

🌷 **Powered By **  : **[Network Tech 🇱🇰](https://t.me/NetworksTech)**

◇───────────────◇️  
    """

caption4 = """
✍️ Logohq Generated Successfully✅

◇───────────────◇

🚀 **Generated By** : **[LOGO GENERATE BOT 🔅](http://t.me/The_logo_generate_bot)**

🌺 **Requestor** :||** {} **||

🌷 **Powered By **  : **[Network Tech 🇱🇰](https://t.me/NetworksTech)**

◇───────────────◇️  
    """

HELP = """

**🖼 How To Use Me ?**

**♻️ Example:** 

/logo NetwokTech
/logohq NetwokTech
/wall fish
/write NetwokTech
/slogo NetwokTech
/slogohq NetwokTech
/swall fish
/unsplash fish
"""
START = """

**🖼 How To Use Me ?**

Hello there, 💞💞

bot gen oyalata logo create karagannam
oyala bot wa oyalage onama group ekakata
add karala ehemath naththam bot inna group
ekata join wela @Network_techchat /logo command
eka bavitha karala logo create karaganna 
puluwan...ita passe bot logo eka create
karala euwama oyalata (send inbox) kiyana
inline button eka press karala oyalata
logo eka inbox ganna puluwan...

⭕️ Bot Command ⬇️

/logo NetwokTech
/logohq NetwokTech
/wall fish
/write NetwokTech
/slogo NetwokTech
/slogohq NetwokTech
/swall fish
/unsplash fish

"""

app = Client(
    'logo Bot',
    bot_token = Config.BOT_TOKEN,
    api_id = Config.API_ID,
    api_hash = Config.API_HASH
)


FSUBB = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton("Network Tech 🇱🇰", url=f"https://t.me/NetworksTech") 
        ]]      
    )

@app.on_message(filters.command("start") & filters.private)
async def start(bot, message):
  await message.reply_photo("https://telegra.ph/file/8f9bfbaae3a8f021acbc0.jpg",caption=START,
      reply_markup=InlineKeyboardMarkup(
          [[InlineKeyboardButton("Netwok Tech Chat 🇱🇰", url=f"https://t.me/Network_techchat")]]), reply_to_message_id = message.message_id)

@app.on_message(filters.command("start") & filters.group=True)
async def start(client: Client, message: Message):
    try:
        await message.reply_chat_action(enums.ChatAction.TYPING)
        await message._client.get_chat_member(int("-1001110021950"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    await message.reply_sticker(sticker = "CAACAgUAAxkBAAIDTmIH_UzldE-IIKD0-N_n_hrcVhzRAAKaAwACKwAB-VTV1LdMsVUFGCME")
    await message.reply_photo(
        photo=f"https://telegra.ph/file/12155d9fd310edf3fab33.jpg",
        caption = """
🍀 hello There 

🙋‍♂️ I am Logo Generate Bot,I can 

🌺 Generating logo
🌷 Generating wallpaper
🚀 Generating 4k logo
🍀 Writing Picture
🔥 **Inline search Image**
🎯 24 horse active

🔥 Bot Commands 🔥

/logo NetwokTech
/logohq NetwokTech
/wall fish
/write NetwokTech
/slogo NetwokTech
/slogohq NetwokTech
/swall fish
/unsplash fish

🌿 Developer : || @chamod_deshan ||

🔥 [Network Tech 🇱🇰](https://t.me/NetworksTech) Corporation ©️
""",
    reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "➕ ❰ ᴀᴅᴅ ᴍᴇ ᴛᴏ ɢʀᴏᴜᴘ ❱ ➕", url=f"https://t.me/The_logo_generate_bot?startgroup=true"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "Network Tech 🇱🇰", url=f"https://t.me/NetworksTech"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "Network Tech Chat 🇱🇰", url="https://t.me/Network_techchat"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🌷 Developer 🌷", url=f"https://t.me/chamod_deshan"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🆘   help   🆘", callback_data="help"
                    )
                ],
                [
                    InlineKeyboardButton(text=
                       "◇────🔍 Search Here Image 🔎────◇", switch_inline_query_current_chat=""
                    )
                ]
           ]
        )
    )


@app.on_message(filters.command("help") & filters.group=True)
async def help(bot, message):
  await message.reply_photo("https://telegra.ph/file/bd9a2bb25666a94f30211.jpg",caption=HELP,reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="<<< Back", callback_data="start_menu")]]), reply_to_message_id = message.message_id)   

@app.on_message(filters.command("ib"))
async def ib(bot, message):
  await message.reply_photo("https://telegra.ph/file/bd9a2bb25666a94f30211.jpg",caption=ibn,reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="<<< Back", callback_data="start_menu")]]), reply_to_message_id = message.message_id)   


@app.on_message(filters.command("about") & filters.group=True)
async def about_(client: Client, message: Message):
    try:
        await message.reply_chat_action(enums.ChatAction.TYPING)
        await message._client.get_chat_member(int("-1001110021950"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    await message.reply_sticker(sticker = "CAACAgUAAxkBAAIDTmIH_UzldE-IIKD0-N_n_hrcVhzRAAKaAwACKwAB-VTV1LdMsVUFGCME")
    await message.reply_photo(
        photo=f"https://telegra.ph/file/bd9a2bb25666a94f30211.jpg",
        caption = """

🔥 [Network Tech 🇱🇰](https://t.me/NetworksTech) Corporation ©️
""",
    reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "➕ ❰ ᴀᴅᴅ ᴍᴇ ᴛᴏ ɢʀᴏᴜᴘ ❱ ➕", url=f"https://t.me/The_logo_generate_bot?startgroup=true"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "Network Tech 🇱🇰", url=f"https://t.me/NetworksTech"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "Network Tech Chat 🇱🇰", url="https://t.me/Network_techchat"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🌷 Developer 🌷", url=f"https://t.me/chamod_deshan"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🆘   help   🆘", callback_data="help"
                    )
                    
                ],
                [
                    InlineKeyboardButton(text=
                       "◇────🔍 Search Here Image 🔎────◇", switch_inline_query_current_chat=""
                    )
                ]
           ]
        )
    )

ibn = """**🎨 Successfully Generated logo ✅**\n**🏖 This Logo was sent to the Requester by Bot Inbox 🛠**"""
     

@app.on_message(filters.command("slogo") & filters.group=True)
async def on_off_antiarab(_, message: Message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    status = await message.reply("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))
    text = message.text.split(None, 1)[1]
    photo = get(f"https://single-developers.up.railway.app/logo?name={text}").history[1].url
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption =caption.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()

    
#hq logo creator
@app.on_message(filters.command("slogohq") & filters.group=True)
async def on_off_antiarab(_, message: Message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    status = await message.reply("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))
    text = message.text.split(None, 1)[1]
    photo = get(f"https://single-developers.up.railway.app/logohq?name={text}").history[1].url
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption =caption4.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()

#handwrite
@app.on_message(filters.command("write") & filters.group=True)
async def on_off_antiarab(_, message: Message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    status = await message.reply("**⚙ Writing You Picture ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Writing You Picture ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Writing You Picture ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))
    text = message.text.split(None, 1)[1]
    API = "https://single-developers.up.railway.app/write"
    body = {     
     "text":f"{text}"     
    }
    req = requests.post(API, headers={'Content-Type': 'application/json'}, json=body)
    img = req.history[1].url
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=img, caption =caption2.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{img}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()

#wallpaper
@app.on_message(filters.command("swall") & filters.group=True)
async def on_off_antiarab(_, message: Message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    status = await message.reply("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))
    text = message.text.split(None, 1)[1]
    photo = get(f"https://single-developers.up.railway.app/wallpaper?search={text}").history[1].url
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption=caption3.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()

@app.on_message(filters.command("logo") & filters.group=True)
async def logo(bot, message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    text = message.text.split(None, 1)[1]
    status = await message.reply("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Logo ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))  
    photo = await generate_logo(text)
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption=caption.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()


    

@app.on_message(filters.command("logohq") & filters.group=True)
async def logohq(bot, message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB
    )
        return
    text = message.text.split(None, 1)[1]
    status = await message.reply("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Logohq ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))  
    photo = await generate_logo(text,True)
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption=caption4.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()
    

@app.on_message(filters.command("wall") & filters.group=True)
async def logo(bot, message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    text = message.text.split(None, 1)[1]
    status = await message.reply("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))  
    img = await get_wallpapers(text)
    photo = random.choice(img)
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption=caption3.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()
    
 
@app.on_message(filters.command("unsplash") & filters.group=True)
async def logo(bot, message):
    try:
        await message.reply_chat_action("typing")
        await message._client.get_chat_member(int("-1001638745764"), message.from_user.id)
    except UserNotParticipant:
        await message.reply_text(
        text=f"**⛔️ Access Denied ⛔️**\n\n🙋‍♂️ **Hey There** {message.from_user.mention}, You Must **Join** @NetworksTech  Telegram **Channel** To Use This BOT. So, **Please Join** it & Try Again🤗. **Thank** You 🤝", disable_web_page_preview=True, reply_markup=FSUBB, reply_to_message_id = message.message_id
    )
        return
    text = message.text.split(None, 1)[1]
    status = await message.reply("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("░░░░░░░░░░░░░", callback_data="progress_msg")]]), reply_to_message_id = message.message_id)
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("██████░░░░░░░", callback_data="progress_msg")]]))
    await status.edit("**⚙ Generating You Wallpaper ....**",
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("█████████████", callback_data="progress_msg")]]))  
    img = await get_unsplash(text)
    photo = random.choice(img)
    await message.reply_chat_action("upload_photo")
    await app.send_photo(message.chat.id, photo=photo, caption=caption3.format(message.from_user.mention), reply_to_message_id = message.message_id,
                 reply_markup=InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "🌷 Open In Google 🌷", url=f"{photo}"
                    )
                ],
                [
                    InlineKeyboardButton(
                        "🏖 Send Inbox 🏖", callback_data="ib"
                    )
                ]
            ]
          )
    )
    await status.delete()

API = "https://apibu.herokuapp.com/api/y-images?query="

button = InlineKeyboardMarkup(
    [
        [
            InlineKeyboardButton("Network Tech 🇱🇰", url=f"https://t.me/NetworksTech")
        ],
        [
            InlineKeyboardButton("🔍◇─◇Search Again◇─◇🔎", switch_inline_query_current_chat="")
        ]
    ]
    
    )


@app.on_callback_query(filters.regex("help"))
async def help(_,query):
  await query.answer(f"🏖 Bot Help 🏖")
  await query.message.edit(HELP,reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton(text="<<< Back", callback_data="start")]]))

@app.on_callback_query(filters.regex("ib"))
async def ib(_,query):
    message = query.message
    await query.answer(f"🏖 Send Inbox 🏖")
    await query.message.copy(chat_id=query.from_user.id)
    await query.message.edit(ibn,
        reply_markup=InlineKeyboardMarkup(
            [[InlineKeyboardButton("✖️ close ✖️", callback_data="close")]]))

    
@app.on_callback_query(filters.regex("close"))
async def close(_,query):
    message = query.message
    await query.answer(f"✖️ Close Menu ✖️")
    await query.message.reply_chat_action("cancel")
    await query.message.delete()
    
@app.on_callback_query(filters.regex("inb"))
async def ibb(_,query):
    message = query.message
    await query.answer(f"🏖 Send Inbox 🏖")
    await query.message.forward(chat_id=query.from_user.id,
    from_chat_id=message.chat.id,
    message_id=query.message.id)
    await query.message.reply(ibn)
    
@app.on_callback_query()
async def button(app, update):
      cb_data = update.data
      if "ibv" in cb_data:
        await message.copy(chat_id=message.from_user.id)
        await update.message.edit(ibn)
      elif "start" in cb_data:
        await update.message.delete()
        await start(app, update.message)

@app.on_inline_query()
async def search(bot, update):
    results = requests.get(API + requests.utils.requote_uri(update.query)).json()["result"][:50]
    answers = []
    for result in results:
        answers.append(
            InlineQueryResultPhoto(
                title=update.query.capitalize(),
                description=result,
                reply_markup= button,
                caption="Netwok Tech 🇱🇰](https://t.me/NetwoksTech)  corporation ©",
                photo_url=result
            )
        )
    await update.answer(answers)

app.run()
